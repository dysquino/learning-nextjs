{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-grid;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  background: transparent;\\n  border-radius: 3px;\\n  border: 2px solid palevioletred;\\n  color: palevioletred;\\n  margin: 0 0.5em;\\n  padding: 0.25em 1em;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 15px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 1.5em;\\n  font-family: 'Opens Sans';\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\nvar Title = styled.h1(_templateObject());\nvar Wrapper = styled.section(_templateObject2());\nvar BtnWrapper = styled.div(_templateObject3());\nvar Button = styled.button(_templateObject4());\nvar TaskContainer = styled.div(_templateObject5());\n\nvar _useStores = useStores(),\n    todosStore = _useStores.todosStore;\n\nvar Task = function Task(_ref) {\n  var task = _ref.task;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textDecoration: task.completed ? 'line-through' : ''\n    }\n  }, task.title), /*#__PURE__*/React.createElement(BtnWrapper, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return completeToDo(index);\n    }\n  }, \"Complete\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return todosStore.removeToDo(task.id);\n    }\n  }, \"x\"))));\n};\n\nvar Todo = function Todo() {\n  var _useState = useState([]),\n      tasks = _useState[0],\n      setTasks = _useState[1];\n\n  var completeToDo = function completeToDo(index) {\n    var newTasks = _toConsumableArray(tasks);\n\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n  /* const removeToDo = (id) => {\n    const newTasks = [...tasks];\n    const remainder = newTasks.filter((task) => task.id !== id);\n    setTasks(remainder);\n  }; */\n\n\n  return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(Title, null, \"TODO - ITEMS\"), /*#__PURE__*/React.createElement(TaskContainer, null, todosStore.todos.map(function (todo) {\n    return /*#__PURE__*/React.createElement(Task, {\n      task: todo\n    });\n  })), /*#__PURE__*/React.createElement(CreateToDo, null));\n};\n\nexport default observer(Todo);","map":null,"metadata":{},"sourceType":"module"}