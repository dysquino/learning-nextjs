{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/to-do.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport AddToDo from './add-to-do';\n\nfunction Task(_ref) {\n  var task = _ref.task,\n      index = _ref.index,\n      completeTask = _ref.completeTask,\n      removeTask = _ref.removeTask;\n  return __jsx(\"div\", {\n    className: \"task\",\n    style: {\n      textDecoration: task.completed ? 'line-through' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, task.title, __jsx(\"button\", {\n    onClick: function onClick() {\n      return completeToDo(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Complete\"), __jsx(\"button\", {\n    style: {\n      background: 'red'\n    },\n    onClick: function onClick() {\n      return removeToDo(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"x\"));\n}\n\n_c = Task;\n\nfunction Todo() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      tasks = _useState[0],\n      setTasks = _useState[1];\n\n  var addToDo = function addToDo(title) {\n    var newTasks = [].concat(_toConsumableArray(tasks), [{\n      title: title,\n      completed: false\n    }]);\n    setTasks(newTasks);\n  };\n\n  var completeToDo = function completeToDo(index) {\n    var newTasks = _toConsumableArray(tasks);\n\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  var removeTodo = function removeTodo(index) {\n    var newTasks = _toConsumableArray(tasks);\n\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return __jsx(\"div\", {\n    className: \"todo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"TODO - ITEMS\"), __jsx(\"div\", {\n    className: \"tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, tasks.map(function (task, index) {\n    return __jsx(Task, {\n      task: task,\n      index: index,\n      key: index,\n      completeToDo: completeToDo,\n      removeTodo: removeTodo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    });\n  })), __jsx(\"div\", {\n    className: \"create-to-do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(AddToDo, {\n    addToDo: addToDo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Todo, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c2 = Todo;\nexport default Todo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"Todo\");","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/to-do.js"],"names":["React","useState","AddToDo","Task","task","index","completeTask","removeTask","textDecoration","completed","title","completeToDo","background","removeToDo","Todo","tasks","setTasks","addToDo","newTasks","removeTodo","splice","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport AddToDo from './add-to-do';\n\nfunction Task({ task, index, completeTask, removeTask }) {\n  return (\n    <div\n      className=\"task\"\n      style={{ textDecoration: task.completed ? 'line-through' : '' }}\n    >\n      {task.title}\n      <button onClick={() => completeToDo(index)}>Complete</button>\n      <button style={{ background: 'red' }} onClick={() => removeToDo(index)}>\n        x\n      </button>\n    </div>\n  );\n}\n\nfunction Todo() {\n  const [tasks, setTasks] = useState([]);\n\n  const addToDo = (title) => {\n    const newTasks = [...tasks, { title, completed: false }];\n    setTasks(newTasks);\n  };\n\n  const completeToDo = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  const removeTodo = (index) => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <div className=\"header\">TODO - ITEMS</div>\n      <div className=\"tasks\">\n        {tasks.map((task, index) => (\n          <Task\n            task={task}\n            index={index}\n            key={index}\n            completeToDo={completeToDo}\n            removeTodo={removeTodo}\n          />\n        ))}\n      </div>\n      <div className=\"create-to-do\">\n        <AddToDo addToDo={addToDo} />\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}