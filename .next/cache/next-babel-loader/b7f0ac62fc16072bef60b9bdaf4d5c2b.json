{"ast":null,"code":"var _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nimport { observable, action } from 'mobx';\nimport axios from 'axios';\nlet CCsStore = (_class = class CCsStore {\n  // @observable ccs = {};\n  constructor() {\n    return (async () => {\n      // All async code here\n      this.value = await asyncFunction();\n      return this; // when done\n    })();\n  }\n\n  async getDetails() {\n    const response = await axios.get(`https://fakerapi.it/api/v1/credit_cards?_quantity=1`);\n  }\n\n}, (_applyDecoratedDescriptor(_class.prototype, \"getDetails\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getDetails\"), _class.prototype)), _class);\nlet CCStore = (_class2 = (_temp = class CCStore {\n  constructor(props) {\n    _initializerDefineProperty(this, \"type\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"owner\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"number\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"expiration\", _descriptor4, this);\n\n    this.type = type;\n    this.number = number;\n    this.owner = owner;\n    this.expiration = expiration;\n    console.log('props ', props);\n    Object.assign(this, props);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"type\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"owner\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"number\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"expiration\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n})), _class2);\n\nclass AsyncConstructor {}\n\nexport default CCsStore;","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/stores/cc-store.js"],"names":["observable","action","axios","CCsStore","constructor","value","asyncFunction","getDetails","response","get","CCStore","props","type","number","owner","expiration","console","log","Object","assign","AsyncConstructor"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,Q,aAAN,MAAMA,QAAN,CAAe;AACb;AAEAC,EAAAA,WAAW,GAAG;AACZ,WAAO,CAAC,YAAY;AAClB;AACA,WAAKC,KAAL,GAAa,MAAMC,aAAa,EAAhC;AACA,aAAO,IAAP,CAHkB,CAGL;AACd,KAJM,GAAP;AAKD;;AAED,QACMC,UADN,GACmB;AACjB,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CACpB,qDADoB,CAAvB;AAGD;;AAhBY,C,8DAWZR,M;IAOGS,O,uBAAN,MAAMA,OAAN,CAAc;AAMZN,EAAAA,WAAW,CAACO,KAAD,EAAQ;AAAA;;AAAA;;AAAA;;AAAA;;AACjB,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,KAAtB;AACAO,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBR,KAApB;AACD;;AAbW,C,+EACXX,U;;;;;WAAkB,E;;0EAClBA,U;;;;;WAAmB,E;;2EACnBA,U;;;;;WAAoB,E;;+EACpBA,U;;;;;WAAwB,E;;;;AAW3B,MAAMoB,gBAAN,CAAuB;;AAEvB,eAAejB,QAAf","sourcesContent":["import { observable, action } from 'mobx';\nimport axios from 'axios';\n\nclass CCsStore {\n  // @observable ccs = {};\n\n  constructor() {\n    return (async () => {\n      // All async code here\n      this.value = await asyncFunction();\n      return this; // when done\n    })();\n  }\n\n  @action\n  async getDetails() {\n    const response = await axios.get(\n      `https://fakerapi.it/api/v1/credit_cards?_quantity=1`,\n    );\n  }\n}\nclass CCStore {\n  @observable type = '';\n  @observable owner = '';\n  @observable number = '';\n  @observable expiration = '';\n\n  constructor(props) {\n    this.type = type;\n    this.number = number;\n    this.owner = owner;\n    this.expiration = expiration;\n    console.log('props ', props);\n    Object.assign(this, props);\n  }\n}\nclass AsyncConstructor {}\n\nexport default CCsStore;\n"]},"metadata":{},"sourceType":"module"}