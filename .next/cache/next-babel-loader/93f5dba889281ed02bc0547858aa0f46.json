{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/to-do.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-grid;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  background: transparent;\\n  border-radius: 3px;\\n  border: 2px solid palevioletred;\\n  color: palevioletred;\\n  margin: 0 0.5em;\\n  padding: 0.25em 1em;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 15px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 1.5em;\\n  font-family: 'Opens Sans';\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\nimport CreateToDo from './create-to-do';\nvar Title = styled.h1(_templateObject());\n_c = Title;\nvar Wrapper = styled.section(_templateObject2());\n_c2 = Wrapper;\nvar BtnWrapper = styled.div(_templateObject3());\n_c3 = BtnWrapper;\nvar Button = styled.button(_templateObject4());\n_c4 = Button;\nvar TaskContainer = styled.div(_templateObject5());\n_c5 = TaskContainer;\n\nvar Task = function Task(_ref) {\n  var task = _ref.task,\n      index = _ref.index,\n      completeToDo = _ref.completeToDo,\n      removeToDo = _ref.removeToDo;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textDecoration: task.completed ? 'line-through' : ''\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, task.title), __jsx(BtnWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return completeToDo(index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Complete\"), __jsx(Button, {\n    onClick: function onClick() {\n      return removeToDo(task.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"x\"))));\n};\n\n_c6 = Task;\n\nvar Todo = function Todo() {\n  _s();\n\n  var _useState = useState([]),\n      tasks = _useState[0],\n      setTasks = _useState[1];\n\n  var addToDo = function addToDo(title) {\n    var newTasks = [].concat(_toConsumableArray(tasks), [{\n      title: title,\n      completed: false,\n      id: uuidv4()\n    }]);\n    setTasks(newTasks);\n  };\n\n  var completeToDo = function completeToDo(index) {\n    var newTasks = _toConsumableArray(tasks);\n\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  var removeToDo = function removeToDo(id) {\n    var newTasks = _toConsumableArray(tasks);\n\n    var remainder = newTasks.filter(function (task) {\n      return task.id !== id;\n    });\n    setTasks(remainder);\n  };\n\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"TODO - ITEMS\"), __jsx(TaskContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, tasks.map(function (task, index) {\n    return __jsx(Task, {\n      task: task,\n      index: index,\n      key: index,\n      completeToDo: completeToDo,\n      removeToDo: removeToDo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    });\n  })), __jsx(CreateToDo, {\n    addToDo: addToDo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Todo, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c7 = Todo;\nexport default Todo;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"BtnWrapper\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"TaskContainer\");\n$RefreshReg$(_c6, \"Task\");\n$RefreshReg$(_c7, \"Todo\");","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/to-do.js"],"names":["React","useState","styled","v4","uuidv4","CreateToDo","Title","h1","Wrapper","section","BtnWrapper","div","Button","button","TaskContainer","Task","task","index","completeToDo","removeToDo","display","textDecoration","completed","title","id","Todo","tasks","setTasks","addToDo","newTasks","remainder","filter","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\nimport CreateToDo from './create-to-do';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  font-family: 'Opens Sans';\n`;\n\nconst Wrapper = styled.section`\n  text-align: center;\n`;\n\nconst BtnWrapper = styled.div`\n  padding: 0 15px;\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 0.5em;\n  padding: 0.25em 1em;\n`;\n\nconst TaskContainer = styled.div`\n  display: inline-grid;\n`;\n\nconst Task = ({ task, index, completeToDo, removeToDo }) => {\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <div style={{ textDecoration: task.completed ? 'line-through' : '' }}>\n          {task.title}\n        </div>\n        <BtnWrapper>\n          <Button onClick={() => completeToDo(index)}>Complete</Button>\n          <Button onClick={() => removeToDo(task.id)}>x</Button>\n        </BtnWrapper>\n      </div>\n    </>\n  );\n};\n\nconst Todo = () => {\n  const [tasks, setTasks] = useState([]);\n\n  const addToDo = (title) => {\n    const newTasks = [...tasks, { title, completed: false, id: uuidv4() }];\n    setTasks(newTasks);\n  };\n\n  const completeToDo = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  const removeToDo = (id) => {\n    const newTasks = [...tasks];\n    const remainder = newTasks.filter((task) => task.id !== id);\n    setTasks(remainder);\n  };\n\n  return (\n    <Wrapper>\n      <Title>TODO - ITEMS</Title>\n      <TaskContainer>\n        {tasks.map((task, index) => (\n          <Task\n            task={task}\n            index={index}\n            key={index}\n            completeToDo={completeToDo}\n            removeToDo={removeToDo}\n          />\n        ))}\n      </TaskContainer>\n      <CreateToDo addToDo={addToDo} />\n    </Wrapper>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}