{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp, _class3, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp2;\n\nimport { observable, action } from 'mobx';\nimport axios from 'axios';\nvar CCsStore = (_class = (_temp = /*#__PURE__*/function () {\n  function CCsStore() {\n    _classCallCheck(this, CCsStore);\n\n    _initializerDefineProperty(this, \"ccs\", _descriptor, this);\n  }\n\n  _createClass(CCsStore, [{\n    key: \"getDetails\",\n\n    /* @observable type = '';\n    @observable owner = '';\n    @observable number = '';\n    @observable expiration = ''; */\n    value: function getDetails() {\n      axios.get(\"https://fakerapi.it/api/v1/credit_cards?_quantity=1\").then(function (response) {\n        console.log(response.data.data[0]);\n        /*  console.log(\n          response.data.data[0].type,\n          response.data.data[0].owner,\n          response.data.data[0].number,\n          response.data.data[0].expiration,\n        ); */\n\n        this.ccs = new CCStore({\n          type: response.data.data[0].type,\n          number: response.data.data[0].number,\n          owner: response.data.data[0].owner,\n          expiration: response.data.data[0].expiration\n        });\n        /* this.type = response.data.data[0].type;\n        this.owner = response.data.data[0].owner;\n        this.number = response.data.data[0].number;\n        this.expiration = response.data.data[0].expiration; */\n        // console.log(this.type, this.owner, this.number, this.expiration);\n\n        console.log(this.ccs);\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return CCsStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"ccs\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getDetails\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getDetails\"), _class.prototype)), _class);\nvar CCStore = (_class3 = (_temp2 = function CCStore(props) {\n  _classCallCheck(this, CCStore);\n\n  _initializerDefineProperty(this, \"type\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"owner\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"number\", _descriptor4, this);\n\n  _initializerDefineProperty(this, \"expiration\", _descriptor5, this);\n\n  /* this.type = type;\n  this.number = number;\n  this.owner = owner;\n  this.expiration = expiration; */\n  console.log('props ', props);\n  Object.assign(this, props);\n}, _temp2), (_descriptor2 = _applyDecoratedDescriptor(_class3.prototype, \"type\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class3.prototype, \"owner\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class3.prototype, \"number\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class3.prototype, \"expiration\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n})), _class3);\nexport default CCsStore;","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/stores/cc-store.js"],"names":["observable","action","axios","CCsStore","get","then","response","console","log","data","ccs","CCStore","type","number","owner","expiration","error","props","Object","assign"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,Q;;;;;;;;;;AAEJ;;;;iCAMa;AACXD,MAAAA,KAAK,CACFE,GADH,wDAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,CAAZ;AACA;;;;;;;AAMA,aAAKC,GAAL,GAAW,IAAIC,OAAJ,CAAY;AACrBC,UAAAA,IAAI,EAAEN,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBG,IADP;AAErBC,UAAAA,MAAM,EAAEP,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBI,MAFT;AAGrBC,UAAAA,KAAK,EAAER,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBK,KAHR;AAIrBC,UAAAA,UAAU,EAAET,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBM;AAJb,SAAZ,CAAX;AAMA;;;;AAKA;;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,GAAjB;AACD,OAvBH,WAwBS,UAAUM,KAAV,EAAiB;AACtBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,OA1BH;AA2BD;;;;gFAnCAhB,U;;;;;WAAiB,E;;+DAMjBC,M;IAgCGU,O,wBAMJ,iBAAYM,KAAZ,EAAmB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACjB;;;;AAIAV,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBS,KAAtB;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,KAApB;AACD,C,iFAZAjB,U;;;;;WAAkB,E;;0EAClBA,U;;;;;WAAmB,E;;2EACnBA,U;;;;;WAAoB,E;;+EACpBA,U;;;;;WAAwB,E;;;AAY3B,eAAeG,QAAf","sourcesContent":["import { observable, action } from 'mobx';\nimport axios from 'axios';\n\nclass CCsStore {\n  @observable ccs = {};\n  /* @observable type = '';\n  @observable owner = '';\n  @observable number = '';\n  @observable expiration = ''; */\n\n  @action\n  getDetails() {\n    axios\n      .get(`https://fakerapi.it/api/v1/credit_cards?_quantity=1`)\n      .then(function (response) {\n        console.log(response.data.data[0]);\n        /*  console.log(\n          response.data.data[0].type,\n          response.data.data[0].owner,\n          response.data.data[0].number,\n          response.data.data[0].expiration,\n        ); */\n        this.ccs = new CCStore({\n          type: response.data.data[0].type,\n          number: response.data.data[0].number,\n          owner: response.data.data[0].owner,\n          expiration: response.data.data[0].expiration,\n        });\n        /* this.type = response.data.data[0].type;\n        this.owner = response.data.data[0].owner;\n        this.number = response.data.data[0].number;\n        this.expiration = response.data.data[0].expiration; */\n\n        // console.log(this.type, this.owner, this.number, this.expiration);\n        console.log(this.ccs);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n}\n\nclass CCStore {\n  @observable type = '';\n  @observable owner = '';\n  @observable number = '';\n  @observable expiration = '';\n\n  constructor(props) {\n    /* this.type = type;\n    this.number = number;\n    this.owner = owner;\n    this.expiration = expiration; */\n    console.log('props ', props);\n    Object.assign(this, props);\n  }\n}\n\nexport default CCsStore;\n"]},"metadata":{},"sourceType":"module"}