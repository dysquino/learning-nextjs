{"ast":null,"code":"var _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/create-to-do.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { useStores } from '../hooks/use-store';\nconst FormWrapper = styled.div`\n  text-align: center;\n  padding: 20px;\n`;\nconst Input = styled.input`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid black;\n`;\n\nconst CreateToDo = () => {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    todosStore\n  } = useStores();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    todosStore.addToDo(value);\n    setValue('');\n  };\n\n  return __jsx(FormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    placeholder: \"Add a new task\",\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CreateToDo;","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/create-to-do.js"],"names":["useState","styled","useStores","FormWrapper","div","Input","input","CreateToDo","value","setValue","todosStore","handleSubmit","e","preventDefault","addToDo","target"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAI;;;CAA/B;AAKA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAM;;;;CAA3B;;AAMA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAiBR,SAAS,EAAhC;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACL,KAAL,EAAY;AAEZE,IAAAA,UAAU,CAACI,OAAX,CAAmBN,KAAnB;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAND;;AAQA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,KAAK,EAAEH,KAHT;AAIE,IAAA,WAAW,EAAC,gBAJd;AAKE,IAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACG,MAAF,CAASP,KAAV,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAaD,CAzBD;;AA2BA,eAAeD,UAAf","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { useStores } from '../hooks/use-store';\n\nconst FormWrapper = styled.div`\n  text-align: center;\n  padding: 20px;\n`;\n\nconst Input = styled.input`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid black;\n`;\n\nconst CreateToDo = () => {\n  const [value, setValue] = useState('');\n  const { todosStore } = useStores();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n\n    todosStore.addToDo(value);\n    setValue('');\n  };\n\n  return (\n    <FormWrapper>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          className=\"input\"\n          value={value}\n          placeholder=\"Add a new task\"\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </form>\n    </FormWrapper>\n  );\n};\n\nexport default CreateToDo;\n"]},"metadata":{},"sourceType":"module"}