{"ast":null,"code":"var _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/to-do.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nconst Title = styled.h1`\n  font-size: 1.5em;\n  font-family: 'Opens Sans';\n`;\nconst Wrapper = styled.section`\n  text-align: center;\n  background: papayawhip;\n`;\nconst BtnWrapper = styled.section`\n  padding: 0 10px;\n`;\n\nconst Task = ({\n  task,\n  index,\n  completeToDo,\n  removeToDo\n}) => {\n  return __jsx(\"div\", {\n    className: \"task\",\n    style: {\n      textDecoration: task.completed ? 'line-through' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, task.title, __jsx(BtnWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: () => completeToDo(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Complete\"), __jsx(\"button\", {\n    style: {\n      background: 'red'\n    },\n    onClick: () => removeToDo(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"x\")));\n};\n\nconst Todo = () => {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState([]);\n\n  const addToDo = title => {\n    const newTasks = [...tasks, {\n      title,\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n\n  const completeToDo = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  const removeTodo = index => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"TODO - ITEMS\"), __jsx(\"div\", {\n    className: \"tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, tasks.map((task, index) => __jsx(Task, {\n    task: task,\n    index: index,\n    key: index,\n    completeToDo: completeToDo,\n    removeTodo: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }))), __jsx(CreateToDo, {\n    addToDo: addToDo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/to-do.js"],"names":["React","useState","styled","CreateToDo","Title","h1","Wrapper","section","BtnWrapper","Task","task","index","completeToDo","removeToDo","textDecoration","completed","title","background","Todo","tasks","setTasks","addToDo","newTasks","removeTodo","splice","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport CreateToDo from './create-to-do';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  font-family: 'Opens Sans';\n`;\n\nconst Wrapper = styled.section`\n  text-align: center;\n  background: papayawhip;\n`;\n\nconst BtnWrapper = styled.section`\n  padding: 0 10px;\n`;\n\nconst Task = ({ task, index, completeToDo, removeToDo }) => {\n  return (\n    <div\n      className=\"task\"\n      style={{ textDecoration: task.completed ? 'line-through' : '' }}\n    >\n      {task.title}\n      <BtnWrapper>\n        <button onClick={() => completeToDo(index)}>Complete</button>\n        <button style={{ background: 'red' }} onClick={() => removeToDo(index)}>\n          x\n        </button>\n      </BtnWrapper>\n    </div>\n  );\n};\n\nconst Todo = () => {\n  const [tasks, setTasks] = useState([]);\n\n  const addToDo = (title) => {\n    const newTasks = [...tasks, { title, completed: false }];\n    setTasks(newTasks);\n  };\n\n  const completeToDo = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  const removeTodo = (index) => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return (\n    <Wrapper>\n      <Title>TODO - ITEMS</Title>\n      <div className=\"tasks\">\n        {tasks.map((task, index) => (\n          <Task\n            task={task}\n            index={index}\n            key={index}\n            completeToDo={completeToDo}\n            removeTodo={removeTodo}\n          />\n        ))}\n      </div>\n      <CreateToDo addToDo={addToDo} />\n    </Wrapper>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}