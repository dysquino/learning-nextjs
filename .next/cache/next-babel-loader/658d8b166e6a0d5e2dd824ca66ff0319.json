{"ast":null,"code":"var _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/to-do.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\nconst Title = styled.h1`\n  font-size: 1.5em;\n  font-family: 'Opens Sans';\n`;\nconst Wrapper = styled.section`\n  text-align: center;\n`;\nconst BtnWrapper = styled.div`\n  padding: 0 15px;\n`;\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 0.5em;\n  padding: 0.25em 1em;\n`;\nconst TaskContainer = styled.div`\n  display: inline-grid;\n`;\n\nconst Task = ({\n  task\n}) => {\n  const {\n    todosStore\n  } = useStores();\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textDecoration: task.completed ? 'line-through' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, task.title), __jsx(BtnWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => completeToDo(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Complete\"), __jsx(Button, {\n    onClick: () => todosStore.removeToDo(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"x\"))));\n};\n\nconst Todo = () => {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState([]);\n  const {\n    todosStore\n  } = useStores();\n  /* const completeToDo = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  }; */\n\n  /* const removeToDo = (id) => {\n    const newTasks = [...tasks];\n    const remainder = newTasks.filter((task) => task.id !== id);\n    setTasks(remainder);\n  }; */\n\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"TODO - ITEMS\"), __jsx(TaskContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, todosStore.todos.map(todo => __jsx(Task, {\n    task: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }))), __jsx(CreateToDo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default observer(Todo);","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/to-do.js"],"names":["React","useState","styled","CreateToDo","observer","useStores","Title","h1","Wrapper","section","BtnWrapper","div","Button","button","TaskContainer","Task","task","todosStore","display","textDecoration","completed","title","completeToDo","id","removeToDo","Todo","tasks","setTasks","todos","map","todo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,EAAG;;;CAAxB;AAKA,MAAMC,OAAO,GAAGN,MAAM,CAACO,OAAQ;;CAA/B;AAIA,MAAMC,UAAU,GAAGR,MAAM,CAACS,GAAI;;CAA9B;AAIA,MAAMC,MAAM,GAAGV,MAAM,CAACW,MAAO;;;;;;;CAA7B;AASA,MAAMC,aAAa,GAAGZ,MAAM,CAACS,GAAI;;CAAjC;;AAIA,MAAMI,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAiBZ,SAAS,EAAhC;AACA,SACE,4BACE;AAAK,IAAA,KAAK,EAAE;AAAEa,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAEH,IAAI,CAACI,SAAL,GAAiB,cAAjB,GAAkC;AAApD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,KADR,CADF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,YAAY,CAACN,IAAI,CAACO,EAAN,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMN,UAAU,CAACO,UAAX,CAAsBR,IAAI,CAACO,EAA3B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CAJF,CADF,CADF;AAaD,CAfD;;AAiBA,MAAME,IAAI,GAAG,MAAM;AACjB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAiBZ,SAAS,EAAhC;AAEA;;;;;;AAMA;;;;;;AAMA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,UAAU,CAACW,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IACpB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,EAOE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CA3BD;;AA6BA,eAAe1B,QAAQ,CAACqB,IAAD,CAAvB","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  font-family: 'Opens Sans';\n`;\n\nconst Wrapper = styled.section`\n  text-align: center;\n`;\n\nconst BtnWrapper = styled.div`\n  padding: 0 15px;\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 0.5em;\n  padding: 0.25em 1em;\n`;\n\nconst TaskContainer = styled.div`\n  display: inline-grid;\n`;\n\nconst Task = ({ task }) => {\n  const { todosStore } = useStores();\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <div style={{ textDecoration: task.completed ? 'line-through' : '' }}>\n          {task.title}\n        </div>\n        <BtnWrapper>\n          <Button onClick={() => completeToDo(task.id)}>Complete</Button>\n          <Button onClick={() => todosStore.removeToDo(task.id)}>x</Button>\n        </BtnWrapper>\n      </div>\n    </>\n  );\n};\n\nconst Todo = () => {\n  const [tasks, setTasks] = useState([]);\n  const { todosStore } = useStores();\n\n  /* const completeToDo = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  }; */\n\n  /* const removeToDo = (id) => {\n    const newTasks = [...tasks];\n    const remainder = newTasks.filter((task) => task.id !== id);\n    setTasks(remainder);\n  }; */\n\n  return (\n    <Wrapper>\n      <Title>TODO - ITEMS</Title>\n      <TaskContainer>\n        {todosStore.todos.map((todo) => (\n          <Task task={todo} />\n        ))}\n      </TaskContainer>\n      <CreateToDo />\n    </Wrapper>\n  );\n};\n\nexport default observer(Todo);\n"]},"metadata":{},"sourceType":"module"}