{"ast":null,"code":"var _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/to-do.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\nconst Title = styled.h1`\n  font-size: 3.5em;\n  text-align: center;\n`;\nconst Wrapper = styled.section`\n  text-align: center;\n  font-family: 'monospace';\n  background-image: url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"4\" height=\"4\" viewBox=\"0 0 4 4\"%3E%3Cpath fill=\"%239C92AC\" fill-opacity=\"0.4\" d=\"M1 3h1v1H1V3zm2-2h1v1H3V1z\"%3E%3C/path%3E%3C/svg%3E');\n`;\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid black;\n  margin: auto;\n  padding: 0.25em 1em;\n`;\nconst ToDoWrapper = styled.div`\n  display: -webkit-inline-box;\n  text-align: left;\n`;\nconst ToDoListWrapper = styled.div`\n  display: inline-grid;\n`;\nconst ToDo = styled.div`\n  margin: auto;\n  width: fit-content;\n  padding-right: 75px;\n`;\nconst Avatar = styled.div`\n  margin: auto;\n  display: block;\n`;\nconst Task = observer(({\n  todo\n}) => {\n  const {\n    todosStore\n  } = useStores();\n  let avatarGenerator = fetch(`https://ui-avatars.com/api/?size=30&name=${todo.title}`);\n  console.log(avatarGenerator);\n  return __jsx(React.Fragment, null, __jsx(ToDoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: avatarGenerator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), __jsx(ToDo, {\n    style: {\n      textDecoration: todo.completed ? 'line-through' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, todo.title), __jsx(Button, {\n    onClick: () => todosStore.completeToDo(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Done\"), __jsx(Button, {\n    onClick: () => todosStore.removeToDo(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"x\")));\n});\n\nconst Todo = () => {\n  const {\n    todosStore\n  } = useStores();\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"ToDo\"), __jsx(ToDoListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, todosStore.todos.map(todo => __jsx(Task, {\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))), __jsx(CreateToDo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default observer(Todo);","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/to-do.js"],"names":["React","useState","styled","CreateToDo","observer","useStores","Title","h1","Wrapper","section","Button","button","ToDoWrapper","div","ToDoListWrapper","ToDo","Avatar","Task","todo","todosStore","avatarGenerator","fetch","title","console","log","textDecoration","completed","completeToDo","removeToDo","Todo","todos","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,EAAG;;;CAAxB;AAKA,MAAMC,OAAO,GAAGN,MAAM,CAACO,OAAQ;;;;CAA/B;AAMA,MAAMC,MAAM,GAAGR,MAAM,CAACS,MAAO;;;;;;CAA7B;AAQA,MAAMC,WAAW,GAAGV,MAAM,CAACW,GAAI;;;CAA/B;AAKA,MAAMC,eAAe,GAAGZ,MAAM,CAACW,GAAI;;CAAnC;AAIA,MAAME,IAAI,GAAGb,MAAM,CAACW,GAAI;;;;CAAxB;AAMA,MAAMG,MAAM,GAAGd,MAAM,CAACW,GAAI;;;CAA1B;AAKA,MAAMI,IAAI,GAAGb,QAAQ,CAAC,CAAC;AAAEc,EAAAA;AAAF,CAAD,KAAc;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAiBd,SAAS,EAAhC;AACA,MAAIe,eAAe,GAAGC,KAAK,CACxB,4CAA2CH,IAAI,CAACI,KAAM,EAD9B,CAA3B;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AACA,SACE,4BACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEA,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,cAAc,EAAEP,IAAI,CAACQ,SAAL,GAAiB,cAAjB,GAAkC;AAD7C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGR,IAAI,CAACI,KALR,CAJF,EAYE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMH,UAAU,CAACQ,YAAX,CAAwBT,IAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAaE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACS,UAAX,CAAsBV,IAAtB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbF,CADF,CADF;AAmBD,CA1BoB,CAArB;;AA4BA,MAAMW,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEV,IAAAA;AAAF,MAAiBd,SAAS,EAAhC;AAEA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,UAAU,CAACW,KAAX,CAAiBC,GAAjB,CAAsBb,IAAD,IACpB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,EAOE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAdD;;AAgBA,eAAed,QAAQ,CAACyB,IAAD,CAAvB","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\n\nconst Title = styled.h1`\n  font-size: 3.5em;\n  text-align: center;\n`;\n\nconst Wrapper = styled.section`\n  text-align: center;\n  font-family: 'monospace';\n  background-image: url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"4\" height=\"4\" viewBox=\"0 0 4 4\"%3E%3Cpath fill=\"%239C92AC\" fill-opacity=\"0.4\" d=\"M1 3h1v1H1V3zm2-2h1v1H3V1z\"%3E%3C/path%3E%3C/svg%3E');\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid black;\n  margin: auto;\n  padding: 0.25em 1em;\n`;\n\nconst ToDoWrapper = styled.div`\n  display: -webkit-inline-box;\n  text-align: left;\n`;\n\nconst ToDoListWrapper = styled.div`\n  display: inline-grid;\n`;\n\nconst ToDo = styled.div`\n  margin: auto;\n  width: fit-content;\n  padding-right: 75px;\n`;\n\nconst Avatar = styled.div`\n  margin: auto;\n  display: block;\n`;\n\nconst Task = observer(({ todo }) => {\n  const { todosStore } = useStores();\n  let avatarGenerator = fetch(\n    `https://ui-avatars.com/api/?size=30&name=${todo.title}`,\n  );\n\n  console.log(avatarGenerator);\n  return (\n    <>\n      <ToDoWrapper>\n        <Avatar>\n          <img src={avatarGenerator}></img>\n        </Avatar>\n        <ToDo\n          style={{\n            textDecoration: todo.completed ? 'line-through' : '',\n          }}\n        >\n          {todo.title}\n        </ToDo>\n\n        <Button onClick={() => todosStore.completeToDo(todo)}>Done</Button>\n        <Button onClick={() => todosStore.removeToDo(todo)}>x</Button>\n      </ToDoWrapper>\n    </>\n  );\n});\n\nconst Todo = () => {\n  const { todosStore } = useStores();\n\n  return (\n    <Wrapper>\n      <Title>ToDo</Title>\n      <ToDoListWrapper>\n        {todosStore.todos.map((todo) => (\n          <Task todo={todo} />\n        ))}\n      </ToDoListWrapper>\n      <CreateToDo />\n    </Wrapper>\n  );\n};\n\nexport default observer(Todo);\n"]},"metadata":{},"sourceType":"module"}