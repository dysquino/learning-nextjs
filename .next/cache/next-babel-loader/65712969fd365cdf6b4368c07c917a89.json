{"ast":null,"code":"var _class, _descriptor, _temp, _class3, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp2;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, action } from 'mobx';\nimport axios from 'axios';\nlet CCsStore = (_class = (_temp = class CCsStore {\n  constructor() {\n    _initializerDefineProperty(this, \"ccs\", _descriptor, this);\n  }\n\n  getDetails() {\n    axios.get(`https://fakerapi.it/api/v1/credit_cards?_quantity=1`).then(function (response) {\n      console.log(response.data.data[0]);\n      this.ccs = new CCStore(response.data.data[0].type, response.data.data[0].owner, response.data.data[0].number, response.data.data[0].expiration);\n      /*  response.data.data[0].type = type;\n      response.data.data[0].owner = owner;\n      response.data.data[0].number = number;\n      response.data.data[0].expiration = expiration;\n      */\n\n      console.log(response.data.data[0].type, response.data.data[0].owner, response.data.data[0].number, response.data.data[0].expiration);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"ccs\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getDetails\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getDetails\"), _class.prototype)), _class);\nlet CCStore = (_class3 = (_temp2 = class CCStore {\n  constructor(type, number, owner, expiration) {\n    _initializerDefineProperty(this, \"type\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"owner\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"number\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"expiration\", _descriptor5, this);\n\n    this.type = type;\n    this.number = number;\n    this.owner = owner;\n    this.expiration = expiration;\n  }\n\n}, _temp2), (_descriptor2 = _applyDecoratedDescriptor(_class3.prototype, \"type\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class3.prototype, \"owner\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class3.prototype, \"number\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class3.prototype, \"expiration\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n})), _class3);\nexport default CCsStore;","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/stores/cc-store.js"],"names":["observable","action","axios","CCsStore","getDetails","get","then","response","console","log","data","ccs","CCStore","type","owner","number","expiration","catch","error","constructor"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,Q,sBAAN,MAAMA,QAAN,CAAe;AAAA;AAAA;AAAA;;AAIbC,EAAAA,UADA,GACa;AACXF,IAAAA,KAAK,CACFG,GADH,CACQ,qDADR,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,CAAZ;AACA,WAAKC,GAAL,GAAW,IAAIC,OAAJ,CACTL,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBG,IADb,EAETN,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBI,KAFb,EAGTP,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBK,MAHb,EAITR,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBM,UAJb,CAAX;AAMA;;;;;;AAKAR,MAAAA,OAAO,CAACC,GAAR,CACEF,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBG,IADxB,EAEEN,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBI,KAFxB,EAGEP,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBK,MAHxB,EAIER,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBM,UAJxB;AAMD,KArBH,EAsBGC,KAtBH,CAsBS,UAAUC,KAAV,EAAiB;AACtBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,KAxBH;AAyBD;;AA9BY,C,6EACZlB,U;;;;;WAAiB,E;;+DAEjBC,M;IA8BGW,O,wBAAN,MAAMA,OAAN,CAAc;AAMZO,EAAAA,WAAW,CAACN,IAAD,EAAOE,MAAP,EAAeD,KAAf,EAAsBE,UAAtB,EAAkC;AAAA;;AAAA;;AAAA;;AAAA;;AAC3C,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKE,MAAL,GAAcA,MAAd;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKE,UAAL,GAAkBA,UAAlB;AACD;;AAXW,C,iFACXhB,U;;;;;WAAkB,E;;0EAClBA,U;;;;;WAAmB,E;;2EACnBA,U;;;;;WAAoB,E;;+EACpBA,U;;;;;WAAwB,E;;;AAU3B,eAAeG,QAAf","sourcesContent":["import { observable, action } from 'mobx';\nimport axios from 'axios';\n\nclass CCsStore {\n  @observable ccs = {};\n\n  @action\n  getDetails() {\n    axios\n      .get(`https://fakerapi.it/api/v1/credit_cards?_quantity=1`)\n      .then(function (response) {\n        console.log(response.data.data[0]);\n        this.ccs = new CCStore(\n          response.data.data[0].type,\n          response.data.data[0].owner,\n          response.data.data[0].number,\n          response.data.data[0].expiration,\n        );\n        /*  response.data.data[0].type = type;\n        response.data.data[0].owner = owner;\n        response.data.data[0].number = number;\n        response.data.data[0].expiration = expiration;\n */\n        console.log(\n          response.data.data[0].type,\n          response.data.data[0].owner,\n          response.data.data[0].number,\n          response.data.data[0].expiration,\n        );\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n}\n\nclass CCStore {\n  @observable type = '';\n  @observable owner = '';\n  @observable number = '';\n  @observable expiration = '';\n\n  constructor(type, number, owner, expiration) {\n    this.type = type;\n    this.number = number;\n    this.owner = owner;\n    this.expiration = expiration;\n  }\n}\n\nexport default CCsStore;\n"]},"metadata":{},"sourceType":"module"}