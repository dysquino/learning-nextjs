{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n`;\nconst Wrapper = styled.section`\n  width: 'fit-content';\n  display: 'inline-block';\n  font-family: 'monospace';\n  background-image: url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"4\" height=\"4\" viewBox=\"0 0 4 4\"%3E%3Cpath fill=\"%239C92AC\" fill-opacity=\"0.4\" d=\"M1 3h1v1H1V3zm2-2h1v1H3V1z\"%3E%3C/path%3E%3C/svg%3E');\n`;\nconst BtnWrapper = styled.div`\n  padding: 0 15px;\n`;\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid black;\n  margin: 0 0.5em;\n  padding: 0.25em 1em;\n`;\nconst TaskWrapper = styled.div`\n  width: 40vw;\n  max-width: 400px;\n`;\nconst Task = observer(({\n  todo\n}) => {\n  const {\n    todosStore\n  } = useStores();\n  return __jsx(React.Fragment, null, __jsx(TaskWrapper, {\n    style: {\n      textDecoration: todo.completed ? 'line-through' : '',\n      paddingRight: '10px'\n    }\n  }, __jsx(Button, {\n    onClick: () => todosStore.completeToDo(todo)\n  }, \"Done\"), todo.title, __jsx(Button, {\n    onClick: () => todosStore.removeToDo(todo)\n  }, \"x\")));\n});\n\nconst Todo = () => {\n  const {\n    todosStore\n  } = useStores();\n  return __jsx(Wrapper, null, __jsx(Title, null, \"TODO\"), todosStore.todos.map(todo => __jsx(Task, {\n    todo: todo\n  })), __jsx(CreateToDo, null));\n};\n\nexport default observer(Todo);","map":null,"metadata":{},"sourceType":"module"}