{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/to-do.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-grid;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  background: transparent;\\n  border-radius: 3px;\\n  border: 2px solid palevioletred;\\n  color: palevioletred;\\n  margin: 0 0.5em;\\n  padding: 0.25em 1em;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 15px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 1.5em;\\n  font-family: 'Opens Sans';\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\nvar Title = styled.h1(_templateObject());\n_c = Title;\nvar Wrapper = styled.section(_templateObject2());\n_c2 = Wrapper;\nvar BtnWrapper = styled.div(_templateObject3());\n_c3 = BtnWrapper;\nvar Button = styled.button(_templateObject4());\n_c4 = Button;\nvar TaskContainer = styled.div(_templateObject5());\n_c5 = TaskContainer;\nvar Task = observer(_c6 = _s(function (_ref) {\n  _s();\n\n  var todo = _ref.todo;\n\n  var _useStores = useStores(),\n      todosStore = _useStores.todosStore;\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textDecoration: todo.completed ? 'line-through' : ''\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, todo.title), __jsx(BtnWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return todosStore.completeToDo(todo.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Complete\"), __jsx(Button, {\n    onClick: function onClick() {\n      return todosStore.removeToDo(todo.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"x\"))));\n}, \"muHDbqsqjeM9lewwypwasfJAnOM=\", false, function () {\n  return [useStores];\n}));\n_c7 = Task;\n\nvar Todo = function Todo() {\n  _s2();\n\n  var _useStores2 = useStores(),\n      todosStore = _useStores2.todosStore;\n\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"TODO - ITEMS\"), __jsx(TaskContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, todosStore.todos.map(function (todo) {\n    return __jsx(Task, {\n      todo: todo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    });\n  })), __jsx(CreateToDo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(Todo, \"muHDbqsqjeM9lewwypwasfJAnOM=\", false, function () {\n  return [useStores];\n});\n\n_c8 = Todo;\nexport default _c9 = observer(Todo);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"BtnWrapper\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"TaskContainer\");\n$RefreshReg$(_c6, \"Task$observer\");\n$RefreshReg$(_c7, \"Task\");\n$RefreshReg$(_c8, \"Todo\");\n$RefreshReg$(_c9, \"%default%\");","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/to-do.js"],"names":["React","useState","styled","CreateToDo","observer","useStores","Title","h1","Wrapper","section","BtnWrapper","div","Button","button","TaskContainer","Task","todo","todosStore","display","textDecoration","completed","title","completeToDo","id","removeToDo","Todo","todos","map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,IAAMC,KAAK,GAAGJ,MAAM,CAACK,EAAV,mBAAX;KAAMD,K;AAKN,IAAME,OAAO,GAAGN,MAAM,CAACO,OAAV,oBAAb;MAAMD,O;AAIN,IAAME,UAAU,GAAGR,MAAM,CAACS,GAAV,oBAAhB;MAAMD,U;AAIN,IAAME,MAAM,GAAGV,MAAM,CAACW,MAAV,oBAAZ;MAAMD,M;AASN,IAAME,aAAa,GAAGZ,MAAM,CAACS,GAAV,oBAAnB;MAAMG,a;AAIN,IAAMC,IAAI,GAAGX,QAAQ,UAAC,gBAAc;AAAA;;AAAA,MAAXY,IAAW,QAAXA,IAAW;;AAAA,mBACXX,SAAS,EADE;AAAA,MAC1BY,UAD0B,cAC1BA,UAD0B;;AAElC,SACE,4BACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAEH,IAAI,CAACI,SAAL,GAAiB,cAAjB,GAAkC;AAApD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,KADR,CADF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMJ,UAAU,CAACK,YAAX,CAAwBN,IAAI,CAACO,EAA7B,CAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMN,UAAU,CAACO,UAAX,CAAsBR,IAAI,CAACO,EAA3B,CAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CAJF,CADF,CADF;AAeD,CAjBoB;AAAA,UACIlB,SADJ;AAAA,GAArB;MAAMU,I;;AAmBN,IAAMU,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,oBACMpB,SAAS,EADf;AAAA,MACTY,UADS,eACTA,UADS;;AAGjB,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,UAAU,CAACS,KAAX,CAAiBC,GAAjB,CAAqB,UAACX,IAAD;AAAA,WACpB,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB;AAAA,GAArB,CADH,CAFF,EAOE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAdD;;IAAMS,I;UACmBpB,S;;;MADnBoB,I;AAgBN,qBAAerB,QAAQ,CAACqB,IAAD,CAAvB","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  font-family: 'Opens Sans';\n`;\n\nconst Wrapper = styled.section`\n  text-align: center;\n`;\n\nconst BtnWrapper = styled.div`\n  padding: 0 15px;\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0 0.5em;\n  padding: 0.25em 1em;\n`;\n\nconst TaskContainer = styled.div`\n  display: inline-grid;\n`;\n\nconst Task = observer(({ todo }) => {\n  const { todosStore } = useStores();\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <div style={{ textDecoration: todo.completed ? 'line-through' : '' }}>\n          {todo.title}\n        </div>\n        <BtnWrapper>\n          <Button onClick={() => todosStore.completeToDo(todo.id)}>\n            Complete\n          </Button>\n          <Button onClick={() => todosStore.removeToDo(todo.id)}>x</Button>\n        </BtnWrapper>\n      </div>\n    </>\n  );\n});\n\nconst Todo = () => {\n  const { todosStore } = useStores();\n\n  return (\n    <Wrapper>\n      <Title>TODO - ITEMS</Title>\n      <TaskContainer>\n        {todosStore.todos.map((todo) => (\n          <Task todo={todo} />\n        ))}\n      </TaskContainer>\n      <CreateToDo />\n    </Wrapper>\n  );\n};\n\nexport default observer(Todo);\n"]},"metadata":{},"sourceType":"module"}