{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/add-to-do.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nvar AddToDo = function AddToDo(_ref) {\n  _s();\n\n  var setTodo = _ref.setTodo;\n\n  var _useState = useState(''),\n      todoItem = _useState[0],\n      setTodoItem = _useState[1];\n\n  var handleAdd = function handleAdd() {\n    var newTodo = {\n      id: uuidv4(),\n      todo: todoItem,\n      isCompleted: false\n    };\n    setTodo(function (state) {\n      var a = [].concat(_toConsumableArray(state), [newTodo]);\n      localStorage.setItem('todos', JSON.stringify(a));\n      return a;\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    justify: \"center\",\n    style: {\n      padding: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    layout: \"inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    rules: [{\n      required: true,\n      message: 'Field must not be empty.'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    onChange: function onChange(event) {\n      setTodoItem(event.target.value);\n    },\n    placeholder: \"Add to-do item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: handleAdd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Add\")))));\n};\n\n_s(AddToDo, \"pqTYsFIjP73AgxcL8JFITuG40AA=\");\n\n_c = AddToDo;\nexport default AddToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToDo\");","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/add-to-do.js"],"names":["React","useState","useRef","v4","uuidv4","AddToDo","setTodo","todoItem","setTodoItem","handleAdd","newTodo","id","todo","isCompleted","state","a","localStorage","setItem","JSON","stringify","padding","required","message","event","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACCL,QAAQ,CAAC,EAAD,CADT;AAAA,MACxBM,QADwB;AAAA,MACdC,WADc;;AAG/B,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEP,MAAM,EADI;AAEdQ,MAAAA,IAAI,EAAEL,QAFQ;AAGdM,MAAAA,WAAW,EAAE;AAHC,KAAhB;AAKAP,IAAAA,OAAO,CAAC,UAACQ,KAAD,EAAW;AACjB,UAAMC,CAAC,gCAAOD,KAAP,IAAcJ,OAAd,EAAP;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,CAAf,CAA9B;AACA,aAAOA,CAAP;AACD,KAJM,CAAP;AAKD,GAXD;;AAaA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAE,kBAACC,KAAD,EAAW;AACnBf,MAAAA,WAAW,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,KAHH;AAIE,IAAA,WAAW,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAWE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEhB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAXF,CADF,CADF,CADF;AAuBD,CAvCD;;GAAMJ,O;;KAAAA,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddToDo = ({ setTodo }) => {\n  const [todoItem, setTodoItem] = useState('');\n\n  const handleAdd = () => {\n    const newTodo = {\n      id: uuidv4(),\n      todo: todoItem,\n      isCompleted: false,\n    };\n    setTodo((state) => {\n      const a = [...state, newTodo];\n      localStorage.setItem('todos', JSON.stringify(a));\n      return a;\n    });\n  };\n\n  return (\n    <>\n      <Row justify=\"center\" style={{ padding: '20px' }}>\n        <Form layout=\"inline\">\n          <Form.Item\n            rules={[{ required: true, message: 'Field must not be empty.' }]}\n          >\n            <Input\n              onChange={(event) => {\n                setTodoItem(event.target.value);\n              }}\n              placeholder=\"Add to-do item\"\n            ></Input>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" onClick={handleAdd}>\n              Add\n            </Button>\n          </Form.Item>\n        </Form>\n      </Row>\n    </>\n  );\n};\n\nexport default AddToDo;\n"]},"metadata":{},"sourceType":"module"}