{"ast":null,"code":"var _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/to-do.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n`;\nconst Wrapper = styled.section`\n  min-height: 100vh;\n  align-items: center;\n  font-family: 'monospace';\n  background-image: url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"4\" height=\"4\" viewBox=\"0 0 4 4\"%3E%3Cpath fill=\"%239C92AC\" fill-opacity=\"0.4\" d=\"M1 3h1v1H1V3zm2-2h1v1H3V1z\"%3E%3C/path%3E%3C/svg%3E');\n`;\nconst BtnWrapper = styled.div`\n  padding: 0 15px;\n`;\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid black;\n  margin: 0 0.5em;\n  padding: 0.25em 1em;\n`;\nconst TaskWrapper = styled.div`\n  width: 40vw;\n  max-width: 400px;\n`;\nconst Task = observer(({\n  todo\n}) => {\n  const {\n    todosStore\n  } = useStores();\n  return __jsx(React.Fragment, null, __jsx(TaskWrapper, {\n    style: {\n      textDecoration: todo.completed ? 'line-through' : '',\n      paddingRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, todo.title, __jsx(Button, {\n    onClick: () => todosStore.completeToDo(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Done\"), __jsx(Button, {\n    onClick: () => todosStore.removeToDo(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"x\")));\n});\n\nconst Todo = () => {\n  const {\n    todosStore\n  } = useStores();\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"TODO\"), todosStore.todos.map(todo => __jsx(Task, {\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), __jsx(CreateToDo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default observer(Todo);","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/to-do.js"],"names":["React","useState","styled","CreateToDo","observer","useStores","Title","h1","Wrapper","section","BtnWrapper","div","Button","button","TaskWrapper","Task","todo","todosStore","textDecoration","completed","paddingRight","title","completeToDo","removeToDo","Todo","todos","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,EAAG;;;CAAxB;AAKA,MAAMC,OAAO,GAAGN,MAAM,CAACO,OAAQ;;;;;CAA/B;AAOA,MAAMC,UAAU,GAAGR,MAAM,CAACS,GAAI;;CAA9B;AAIA,MAAMC,MAAM,GAAGV,MAAM,CAACW,MAAO;;;;;;CAA7B;AAQA,MAAMC,WAAW,GAAGZ,MAAM,CAACS,GAAI;;;CAA/B;AAKA,MAAMI,IAAI,GAAGX,QAAQ,CAAC,CAAC;AAAEY,EAAAA;AAAF,CAAD,KAAc;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAiBZ,SAAS,EAAhC;AACA,SACE,4BACE,MAAC,WAAD;AACE,IAAA,KAAK,EAAE;AACLa,MAAAA,cAAc,EAAEF,IAAI,CAACG,SAAL,GAAiB,cAAjB,GAAkC,EAD7C;AAELC,MAAAA,YAAY,EAAE;AAFT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGJ,IAAI,CAACK,KANR,EAOE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMJ,UAAU,CAACK,YAAX,CAAwBN,IAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAQE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACM,UAAX,CAAsBP,IAAtB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,CADF,CADF;AAcD,CAhBoB,CAArB;;AAkBA,MAAMQ,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEP,IAAAA;AAAF,MAAiBZ,SAAS,EAAhC;AAEA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGY,UAAU,CAACQ,KAAX,CAAiBC,GAAjB,CAAsBV,IAAD,IACpB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,EAKE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAZD;;AAcA,eAAeZ,QAAQ,CAACoB,IAAD,CAAvB","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CreateToDo from './create-to-do';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../hooks/use-store';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n`;\n\nconst Wrapper = styled.section`\n  min-height: 100vh;\n  align-items: center;\n  font-family: 'monospace';\n  background-image: url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"4\" height=\"4\" viewBox=\"0 0 4 4\"%3E%3Cpath fill=\"%239C92AC\" fill-opacity=\"0.4\" d=\"M1 3h1v1H1V3zm2-2h1v1H3V1z\"%3E%3C/path%3E%3C/svg%3E');\n`;\n\nconst BtnWrapper = styled.div`\n  padding: 0 15px;\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid black;\n  margin: 0 0.5em;\n  padding: 0.25em 1em;\n`;\n\nconst TaskWrapper = styled.div`\n  width: 40vw;\n  max-width: 400px;\n`;\n\nconst Task = observer(({ todo }) => {\n  const { todosStore } = useStores();\n  return (\n    <>\n      <TaskWrapper\n        style={{\n          textDecoration: todo.completed ? 'line-through' : '',\n          paddingRight: '10px',\n        }}\n      >\n        {todo.title}\n        <Button onClick={() => todosStore.completeToDo(todo)}>Done</Button>\n        <Button onClick={() => todosStore.removeToDo(todo)}>x</Button>\n      </TaskWrapper>\n    </>\n  );\n});\n\nconst Todo = () => {\n  const { todosStore } = useStores();\n\n  return (\n    <Wrapper>\n      <Title>TODO</Title>\n      {todosStore.todos.map((todo) => (\n        <Task todo={todo} />\n      ))}\n      <CreateToDo />\n    </Wrapper>\n  );\n};\n\nexport default observer(Todo);\n"]},"metadata":{},"sourceType":"module"}