{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { observable, action } from 'mobx';\nimport axios from 'axios';\nvar CCsStore = (_class = (_temp = /*#__PURE__*/function () {\n  function CCsStore() {\n    _classCallCheck(this, CCsStore);\n\n    _initializerDefineProperty(this, \"type\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"owner\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"number\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"expiration\", _descriptor4, this);\n  }\n\n  _createClass(CCsStore, [{\n    key: \"getDetails\",\n    value: function getDetails() {\n      axios.get(\"https://fakerapi.it/api/v1/credit_cards?_quantity=1\").then(function (response) {\n        // console.log(response.data.data[0]);\n\n        /*  console.log(\n          response.data.data[0].type,\n          response.data.data[0].owner,\n          response.data.data[0].number,\n          response.data.data[0].expiration,\n        ); */\n\n        /* this.ccs = new CCStore({\n          type: response.data.data[0].type,\n          number: response.data.data[0].number,\n          owner: response.data.data[0].owner,\n          expiration: response.data.data[0].expiration,\n        }); */\n        this.type = response.data.data[0].type;\n        this.owner = response.data.data[0].owner;\n        this.number = response.data.data[0].number;\n        this.expiration = response.data.data[0].expiration; // console.log(this.type, this.owner, this.number, this.expiration);\n        // console.log(this.ccs);\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }]);\n\n  return CCsStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"type\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"owner\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"number\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"expiration\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getDetails\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getDetails\"), _class.prototype)), _class);\n/* class CCStore {\n  @observable type = '';\n  @observable owner = '';\n  @observable number = '';\n  @observable expiration = '';\n\n  constructor(props) {\n     this.type = type;\n    this.number = number;\n    this.owner = owner;\n    this.expiration = expiration; \n console.log('props ', props);\n Object.assign(this, props);\n   }\n } */\n\nexport default CCsStore;","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/stores/cc-store.js"],"names":["observable","action","axios","CCsStore","get","then","response","type","data","owner","number","expiration","error","console","log"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,Q;;;;;;;;;;;;;;;iCAQS;AACXD,MAAAA,KAAK,CACFE,GADH,wDAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB;;AACA;;;;;;;AAMA;;;;;;AAMA,aAAKC,IAAL,GAAYD,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBD,IAAlC;AACA,aAAKE,KAAL,GAAaH,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBC,KAAnC;AACA,aAAKC,MAAL,GAAcJ,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBE,MAApC;AACA,aAAKC,UAAL,GAAkBL,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBG,UAAxC,CAjBwB,CAmBxB;AACA;AACD,OAvBH,WAwBS,UAAUC,KAAV,EAAiB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OA1BH;AA2BD;;;;iFAlCAZ,U;;;;;WAAkB,E;;yEAClBA,U;;;;;WAAmB,E;;0EACnBA,U;;;;;WAAoB,E;;8EACpBA,U;;;;;WAAwB,E;;+DAExBC,M;AAgCH;;;;;;;;;;;;;;;;AAgBA,eAAeE,QAAf","sourcesContent":["import { observable, action } from 'mobx';\nimport axios from 'axios';\n\nclass CCsStore {\n  // @observable ccs = {};\n  @observable type = '';\n  @observable owner = '';\n  @observable number = '';\n  @observable expiration = '';\n\n  @action\n  getDetails() {\n    axios\n      .get(`https://fakerapi.it/api/v1/credit_cards?_quantity=1`)\n      .then(function (response) {\n        // console.log(response.data.data[0]);\n        /*  console.log(\n          response.data.data[0].type,\n          response.data.data[0].owner,\n          response.data.data[0].number,\n          response.data.data[0].expiration,\n        ); */\n        /* this.ccs = new CCStore({\n          type: response.data.data[0].type,\n          number: response.data.data[0].number,\n          owner: response.data.data[0].owner,\n          expiration: response.data.data[0].expiration,\n        }); */\n        this.type = response.data.data[0].type;\n        this.owner = response.data.data[0].owner;\n        this.number = response.data.data[0].number;\n        this.expiration = response.data.data[0].expiration;\n\n        // console.log(this.type, this.owner, this.number, this.expiration);\n        // console.log(this.ccs);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n}\n\n/* class CCStore {\n  @observable type = '';\n  @observable owner = '';\n  @observable number = '';\n  @observable expiration = '';\n\n  constructor(props) {\n     this.type = type;\n    this.number = number;\n    this.owner = owner;\n    this.expiration = expiration; \n console.log('props ', props);\n Object.assign(this, props);\n   }\n } */\n\nexport default CCsStore;\n"]},"metadata":{},"sourceType":"module"}