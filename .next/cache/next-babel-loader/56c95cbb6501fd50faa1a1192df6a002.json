{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dysquino/Documents/source/next-app/components/create-to-do.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nvar Wrapper = styled.section(_templateObject());\n_c = Wrapper;\n\nvar CreateToDo = function CreateToDo(_ref) {\n  _s();\n\n  var tasks = _ref.tasks,\n      setTasks = _ref.setTasks;\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var addToDo = function addToDo(title) {\n    var newTasks = [].concat(_toConsumableArray(tasks), [{\n      title: title,\n      completed: false\n    }]);\n    setTasks(newTasks);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    if (!value) return;\n    addToDo(value);\n    setValue('');\n  };\n\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    placeholder: \"Add a new task\",\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(CreateToDo, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c2 = CreateToDo;\nexport default CreateToDo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"CreateToDo\");","map":{"version":3,"sources":["/home/dysquino/Documents/source/next-app/components/create-to-do.js"],"names":["useState","styled","Wrapper","section","CreateToDo","tasks","setTasks","value","setValue","addToDo","title","newTasks","completed","handleSubmit","e","preventDefault","target"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,OAAO,GAAGD,MAAM,CAACE,OAAV,mBAAb;KAAMD,O;;AAIN,IAAME,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA;;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAChBN,QAAQ,CAAC,EAAD,CADQ;AAAA,MACnCO,KADmC;AAAA,MAC5BC,QAD4B;;AAG1C,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACzB,QAAMC,QAAQ,gCAAON,KAAP,IAAc;AAAEK,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,SAAS,EAAE;AAApB,KAAd,EAAd;AACAN,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,GAHD;;AAKA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACR,KAAL,EAAY;AAEZE,IAAAA,OAAO,CAACF,KAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAND;;AAQA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,KAAK,EAAEN,KAHT;AAIE,IAAA,WAAW,EAAC,gBAJd;AAKE,IAAA,QAAQ,EAAE,kBAACO,CAAD;AAAA,aAAON,QAAQ,CAACM,CAAC,CAACE,MAAF,CAAST,KAAV,CAAf;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAaD,CA7BD;;GAAMH,U;;MAAAA,U;AA+BN,eAAeA,UAAf","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  text-align: center;\n`;\n\nconst CreateToDo = ({ tasks, setTasks }) => {\n  const [value, setValue] = useState('');\n\n  const addToDo = (title) => {\n    const newTasks = [...tasks, { title, completed: false }];\n    setTasks(newTasks);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n\n    addToDo(value);\n    setValue('');\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={value}\n          placeholder=\"Add a new task\"\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </form>\n    </Wrapper>\n  );\n};\n\nexport default CreateToDo;\n"]},"metadata":{},"sourceType":"module"}